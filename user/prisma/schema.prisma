// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id       Int     @id @default(autoincrement())
  username String  @unique
  password String
  name     String?
  token    String?

  // id                    Int     @id @default(autoincrement())
  // username              String  @unique @db.VarChar(100)
  // password              String  @db.VarChar(100)
  // name                  String? @db.VarChar(100)
  // email                 String? @db.VarChar(200)
  // // age                   String? @db.VarChar(50)
  // ssnF                  String? @db.VarChar(10)
  // ssnS                  String? @db.VarChar(10)
  // address               String? @db.VarChar(200)
  // phone                 String? @db.VarChar(50)
  // // asset                 Int?
  // color                 String? @db.VarChar(50)
  // investment_propensity String? @db.VarChar(50)
  // mod_date              String? @db.VarChar(50)
  // reg_date              String? @db.VarChar(50)
  // // role                  String? @db.VarChar(30)
  // token                 String? @db.VarChar(50)
}

// model boards {
//   id          Int        @id @default(autoincrement())
//   title       String     @db.VarChar(255)
//   description String?
//   mod_date    String?    @db.VarChar(30)
//   reg_date    String?    @db.VarChar(30)
//   articles    articles[]
// }

// model articles {
//   id        Int     @id @default(autoincrement())
//   title     String  @db.VarChar(255)
//   content   String?

//   writer_id Int?
//   board_id  Int?
//   mod_date  String? @db.VarChar(30)
//   reg_date  String? @db.VarChar(30)
//   answer  String? @db.VarChar(30)
//   boards    boards? @relation(fields: [board_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
// }

// model admins {
//   id         Int     @id @default(autoincrement())
//   username   String  @db.VarChar(255)
//   password   String  @db.VarChar(255)
//   enp_name   String? @db.VarChar(50)
//   enp_num    String? @db.VarChar(10)
//   department String? @db.VarChar(255)
//   position   String? @db.VarChar(100)
//   job        String? @db.VarChar(255)
//   enp_email  String? @db.VarChar(255)
//   phone      String? @db.VarChar(20)
//   role       String? @db.VarChar(10)
//   mod_date   String? @db.VarChar(30)
//   reg_date   String? @db.VarChar(30)
//   token      String? @db.VarChar
// }

// model transactions {
//   id             Int     @id @default(autoincrement())
//   username       String  @db.VarChar(50)
//   buy_stock      String? @db.VarChar(50)
//   buy_quantity   String? @db.VarChar(50)
//   buy_total      String? @db.VarChar(50)
//   sell_stock     String? @db.VarChar(50)
//   sell_quantity  String? @db.VarChar(50)
//   sell_total     String? @db.VarChar(50)
//   trade_date     String? @db.VarChar(50)
//   closing_price  String? @db.VarChar(50)
//   net_profit     String? @db.VarChar(50)
//   purchase_fee   String? @db.VarChar(50)
//   selling_fee    String? @db.VarChar(50)
//   purchase_tax   String? @db.VarChar(50)
//   selling_tax    String? @db.VarChar(50)
//   purchase_total String? @db.VarChar(50)
//   selling_total  String? @db.VarChar(50)
//   standard_fee   String? @db.VarChar(50)
//   base_tax       String? @db.VarChar(50)
//   trade_total    String? @db.VarChar(50)
// }
